import uuid
from django.conf import settings
from django.db import models

from simple_history.models import HistoricalRecords

from alerts.constants import DEFAULT_MIN_CHAR_LENGTH, MIN_CHAR_FOR_YEAR


class Vehicle(models.Model):
    """
    A model representing a vehicle on Kenny U-Pull's website.

    :param id: Autogenerated by Django and the primary key of the table.
    :param manufacturer_name: The name of the manufacturer the vehicle was made by (example Toyota).
    :param model_name: The model name of the vehicle (example Corolla).
    :param model_year: The model's year (example 1996)
    """

    manufacturer_name = models.CharField(
        max_length=DEFAULT_MIN_CHAR_LENGTH, help_text="The name of the manufacturer the vehicle was made by (example Toyota)."
    )
    model_name = models.CharField(max_length=DEFAULT_MIN_CHAR_LENGTH, help_text="The model name of the vehicle (example Corolla).")
    model_year = models.CharField(max_length=MIN_CHAR_FOR_YEAR, help_text="The model's year (example 1996)")

    def __str__(self) -> str:
        """
        String representation of a vehicle which should be human readable.
        :returns: A string representing the vehicle in question.
        """
        return f"{self.model_year} {self.manufacturer_name} {self.model_name}"


class Alert(models.Model):
    """
    A model representing the user's alert they set up in order to watch a specific vehicle on Kenny U-Pull's website.

    :param id: Autogenerated by Django and the primary key of the table.
    :param created: When the record was first inserted into the table.
    :param modified: Recording the date and time when the record was modified.
    :param user: The user the alert belongs to.
    :param vehicle: The vehicle the user is trying to look up which links to the alerts_vehicle table.
    :param branch: The Kenny U-Pull branch to look at if specified (defaults to all if null)
    :param history: Not actually a field auto generates a historical table of all changes done to the given record.
    """

    created = models.DateTimeField(auto_now_add=True)
    modified = models.DateTimeField(auto_now=True)

    user = models.ForeignKey(settings.AUTH_USER_MODEL, on_delete=models.PROTECT)
    vehicle = models.ForeignKey(Vehicle, on_delete=models.CASCADE)
    branch = models.CharField(
        max_length=DEFAULT_MIN_CHAR_LENGTH,
        help_text="The Kenny U-Pull branch to look at if specified (defaults to all if null)",
        null=True,
        blank=True,
    )
    external_id = models.UUIDField(default=uuid.uuid4)

    history = HistoricalRecords()

    def __str__(self) -> str:
        """
        String representation of a user's alert which should be human readable.
        :returns: A string representing the vehicle in question.
        """
        string_version = f"{self.user.username}'s alert on a {self.vehicle}"

        if self.branch:
            string_version = f"{string_version} at {self.branch}"

        return string_version
